# Adapted from Makefile.msp430


### Code common for all ARM CPUs

CONTIKI_CPU_ARM=$(CONTIKI)/cpu/arm
CONTIKI_CPU_ARM_COMMON=$(CONTIKI_CPU_ARM)/common

### Define the CPU directory
CONTIKI_CPU=$(CONTIKI_CPU_ARM)/lpc1347


### Define the source files we have in the LPC1347 port

CONTIKI_CPU_DIRS = . ../common/usb ./cmsis ./LPC11U_LPC13U_CodeBase/src/core/gpio ./LPC11U_LPC13U_CodeBase/src/core/ssp0 ./LPC11U_LPC13U_CodeBase/src/core/ssp1 \
                   ./LPC11U_LPC13U_CodeBase/src/core/timer16 ./LPC11U_LPC13U_CodeBase/src/core/timer32 ./LPC11U_LPC13U_CodeBase/src/core/usb \
                   ./LPC11U_LPC13U_CodeBase/src/core/usb/romdriver \
                   ./LPC11U_LPC13U_CodeBase/src/core/fifo ./LPC11U_LPC13U_CodeBase/src/core/delay ./LPC11U_LPC13U_CodeBase/src/core/iap

### Use the existing debug I/O in cpu/arm/common
CONTIKI_CPU_DIRS += ../common/dbg-io


LPC1347     = clock.c lpc1347-cdc.c

DEBUG_IO_SOURCEFILES += dbg-printf.c dbg-snprintf.c dbg-sprintf.c strformat.c dbg-puts.c dbg-putchar.c

TARGETLIBS = random.c strformat.c system_LPC13Uxx.c startup_lpc13u_gnumake.c leds.c leds-arch.c rtimer-arch.c watchdog.c

CODEBASE = gpio.c fifo.c delay.c iap.c descriptors.c usb_cdc.c usb_custom_class.c usbd.c usb_hid.c ssp0.c ssp1.c timer16.c timer32.c

CONTIKI_TARGET_SOURCEFILES += $(LPC1347) $(DEBUG_IO_SOURCEFILES) $(SYSAPPS) $(ELFLOADER) \
            $(TARGETLIBS) $(CODEBASE) $(UIPDRIVERS)

CONTIKI_SOURCEFILES        += $(CONTIKI_TARGET_SOURCEFILES)


THREADS =
CROSS_PREFIX = arm-none-eabi-
### Compiler definitions
CC       = $(CROSS_PREFIX)gcc
LD       = $(CROSS_PREFIX)ld
AS       = $(CROSS_PREFIX)as
AR       = $(CROSS_PREFIX)ar
NM       = $(CROSS_PREFIX)nm
OBJCOPY  = $(CROSS_PREFIX)objcopy
STRIP    = $(CROSS_PREFIX)strip

XSLTPROC=xsltproc

PROJECT_OBJECTFILES += ${addprefix $(OBJECTDIR)/,$(CONTIKI_TARGET_MAIN:.c=.o)}

# TODO linkerscript adapt
LINKERSCRIPT = $(CONTIKI_CPU)/cmsis/lpc1347.ld


# JTAG program upload
OPENOCD	 = openocd
OPENOCD_DIR = $(CONTIKI_CPU_ARM)/openocd/ 
OPENOCD_CFG = arm7_wig.cfg

ARCH_FLAGS= -mcpu=cortex-m3 -mthumb

CFLAGSNO = -I. -I$(CONTIKI)/core -I$(CONTIKI_CPU) -I$(CONTIKI_CPU)/cmsis \
	   -I$(CONTIKI_CPU)/dbg-io \
        -I$(CONTIKI_CPU)/LPC11U_LPC13U_CodeBase/src -I$(CONTIKI_CPU)/LPC11U_LPC13U_CodeBase/src/core \
           -I$(CONTIKI)/platform/$(TARGET) \
           ${addprefix -I,$(APPDIRS)} \
           -DWITH_UIP -DWITH_ASCII \
           -Wall $(ARCH_FLAGS) -g

CFLAGS  += $(CFLAGSNO) -Os -DRUN_AS_SYSTEM -DROM_RUN
LDFLAGS += -L $(CONTIKI_CPU) -T $(LINKERSCRIPT) -nostartfiles -Xlinker --gc-sections -mcpu=cortex-m3 -mthumb

CDEPFLAGS = $(CFLAGS) -D __MAKING_DEPS__




### Setup directory search path for source files

CUSTOM_RULE_C_TO_OBJECTDIR_O=yes
CUSTOM_RULE_C_TO_O=yes

%.o: %.c
	$(CC) $(CFLAGS) $< -c

$(OBJECTDIR)/%.o: %.c | $(OBJECTDIR)
	$(CC) $(CFLAGS) -c $< -o $@


CUSTOM_RULE_S_TO_OBJECTDIR_O = yes
%.o: %.S
	$(CC) $(CFLAGS) $< -c

$(OBJECTDIR)/%.o: %.S | $(OBJECTDIR)
	$(CC) $(CFLAGS) $< -c  -o $@


CUSTOM_RULE_C_TO_CO=yes

%.co: %.c
	$(CC) $(CFLAGS) $< -c -o $@

CUSTOM_RULE_C_TO_CE=yes

%.ce: %.o
	$(LD) $(LDFLAGS) --relocatable -T $(CONTIKI_CPU)/merge-rodata.ld $< -o $@
	$(STRIP) -K _init -K _fini --strip-unneeded -g -x $@

CUSTOM_RULE_LINK=yes

%-stripped.o: %.c
	$(CC) $(CFLAGS) -c $< -o $@
	$(STRIP) --strip-unneeded -g -x $@

%-stripped.o: %.o
	$(STRIP) --strip-unneeded -g -x -o $@ $<

%.o: ${CONTIKI_TARGET}/loader/%.S
	$(AS) -o $(notdir $(<:.S=.o)) $<

%-nosyms.$(TARGET): %.co $(PROJECT_OBJECTFILES) contiki-$(TARGET).a $(STARTUP) # $(OBJECTDIR)/empty-symbols.o
	$(CC) $(LDFLAGS) $(CFLAGS) -nostartfiles -o $@ $(filter-out %.a,$^) $(filter %.a,$^) -lc $(filter %.a,$^)


%.ihex: %.$(TARGET)
	$(OBJCOPY) $^ -O ihex $@

%.bin: %.$(TARGET)
	$(OBJCOPY) -O binary $< $@

.PHONY: symbols.c
ifdef CORE
%.$(TARGET): %.co $(PROJECT_OBJECTFILES) contiki-$(TARGET).a $(STARTUP) $(OBJECTDIR)/symbols.o
	$(CC) $(LDFLAGS) $(CFLAGS) -nostartfiles -o $@ $(filter-out %.a,$^) $(filter %.a,$^) -lc $(filter %.a,$^)

symbols.c: $(CORE)
	$(NM) $< | awk -f $(CONTIKI_CPU)/builtins.awk -f ../../tools/mknmlist > symbols.c

else
%.$(TARGET): %-nosyms.$(TARGET)
	ln -sf $< $@
endif

empty-symbols.c:
	cp ${CONTIKI}/tools/empty-symbols.c symbols.c
	cp ${CONTIKI}/tools/empty-symbols.h symbols.h


# Don't use core/loader/elfloader.c, use elfloader-otf.c instead
$(OBJECTDIR)/elfloader.o: | $(OBJECTDIR)
	echo -n >$@

clean: clean_cpu

clean_cpu:
	-rm -rf $(BUILTSRCDIR)

.PRECIOUS: %-nosyms.$(TARGET)
